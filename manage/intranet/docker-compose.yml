
# This is the base configuration. 
version: '3.2'

services:

  # -------------------------------------------------------------
  # NGINX that proxies connections to the intranet components
  # -------------------------------------------------------------
  web:
    # To be updated via an external cron job running docker swarm update...
    image: nginx
    volumes:
      - ./config/nginx.template:/etc/nginx/conf.d/nginx.template
      - /mnt/nfs/data/ukwa-reports-html:/usr/share/nginx/html/intranet
    ports:
      - "90:90"
    environment:
      - SERVER_NAME=${SERVER_NAME}
    command: /bin/bash -c "envsubst '$$SERVER_NAME' < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  # -------------------------------------------------------------
  # Internal API
  # -------------------------------------------------------------
  api:
    image: ukwa/ukwa-access-api
    environment:
      - "CDX_SERVER=http://crawldb-fc.api.wa.bl.uk/fc"
      - "WAYBACK_SERVER=http://pywb-nobanner:8080/archive/"
      - "WEBHDFS_PREFIX=http://${CRAWLER_WEBHDFS}"
      - "KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BROKER}"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_SEEK_TO_BEGINNING=False"
      - "API_LABEL=UK Web Archive API"
      - "KAFKA_LAUNCH_BROKER=${KAFKA_BROKER}"
      - "KAFKA_LAUNCH_TOPIC=fc.tocrawl.npld"
      - "HTTPS_PROXY=http://194.66.232.92:3127/"
      - "SERVER_NAME=${SERVER_NAME}"
      - "ANALYSIS_SOURCE_FILE=/analysis/fc.crawled.json"
      - "WEBRENDER_ARCHIVE_SERVER=http://webrender:8010/render"
      - "SCRIPT_NAME=/intranet/api" # Deploy the API under this prefix
    volumes:
      - "/mnt/nfs/data/analysis-results:/analysis"

  # Analyses recent crawl behaviour by processing the crawled data stream:
  analyse:
    image: ukwa/crawl-streams
    command: "analyse -k ${KAFKA_BROKER} -u 2 -o /analysis/fc.crawled.json"
    volumes:
      - "/mnt/nfs/data/analysis-results:/analysis"

  # An embedded, bannerless OA Wayback to render:
  pywb-nobanner:
    image: ukwa/ukwa-pywb:2.4.0-beta
    ports:
      - "8090:8080"
    environment:
      - "WEBHDFS_USER=access"
      - "UKWA_INDEX=cdx+http://crawldb-fc.api.wa.bl.uk/fc"
      - "UKWA_ARCHIVE=webhdfs://${CRAWLER_WEBHDFS}"
    volumes:
      - ./config/pywb/config-nobanner.yaml:/webarchive/config.yaml
      - ./config/pywb/empty-banner.js:/ukwa_pywb/static/default_banner.js
      # Used to store the access control lists used by the pywb services.
      #- "/mnt/nfs/data/website/open-access-acl:/ukwa_pywb/acl/"

  # Web page rendering post-crawl:
  webrender:
    image: ukwa/webrender-api:1.0.14
    environment:
      - "HTTP_PROXY=http://pywb-nobanner:8080"
      - "DOCKER_NETWORK=intranet_default"
      - "LC_ALL=en_US.utf8"
      - "WEB_RENDER_TMP=/tmp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp:/tmp
    deploy:
      replicas: 1

  # -------------------------------------------------------------
  # Notebooks and Dashboards
  # -------------------------------------------------------------
  nbapps:
    image: ukwa/ukwa-notebook-apps
    command: "--base_url=/intranet/nbapps/ --template=material /app"
    ports:
     - "8866:8866"

  # -------------------------------------------------------------
  # Crawl log viewer
  # -------------------------------------------------------------
  crawl-log-viewer:
    image: ukwa/crawl-log-viewer
    environment:
      - "SCRIPT_NAME=/intranet/logs"
    volumes:
      - ./config/crawl-log-topics.json:/usr/src/app/topics.json

  # -------------------------------------------------------------
  # Backstage Browser
  # -------------------------------------------------------------
  backstage:
    image: ukwa/ukwa-backstage
    environment:
     - "CATALOG_SOLR_URL=http://192.168.45.21:8983/solr/tracking"
     - "TRACKDB_SOLR_URL=http://192.168.45.21:8983/solr/tracking"
     - "DEPLOY_RELATIVE_URL_ROOT=/intranet"
     - "RAILS_SERVE_STATIC_FILES=true"
    ports:
     - 3001:3000

  backstage-react:
    image: ukwa/shine-react
    environment:
     - "SOLR_URL=http://192.168.45.21:8983/solr/tracking"
    ports:
     - 8111:80
    volumes:
     - ./config/tracking-ui-config.js:/usr/share/nginx/html/config.js

# -----------------------------------------
# Volumes and networks supporting the above
# -----------------------------------------

# Only transient storage so can be managed entirely by Docker.
volumes:
  # A volume to hold the UKWA-Reports site, generated by Hugo.
  static-html:
  # Used to store analysis generated from Kafka, so it can be made available via the API component.
  analysis-results:

networks:
  # This attachable network is needed so the screenshotter can spin up containers and talk to them over HTTP.
  default:
    driver: overlay
    attachable: true
